version: "3.0"

services:
  cloudflare:
    image: cloudflare/cloudflared:2021.11.0
    container_name: cloudflared
    restart: unless-stopped
    volumes:
      - ${BASE_DIR}/cloudflared:/etc/cloudflared
    command: tunnel --config /etc/cloudflared/config/config.yaml run
    depends_on:
      - traefik
    networks:
      - web
    extra_hosts:
      - "host.docker.internal:host-gateway"
  # TODO: https://kevinquillen.com/setting-traefik-2-local-ssl-certificate
  traefik:
    image: traefik:latest
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.watch=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.defaultrule=Host(`{{ index .Labels \"com.docker.compose.service\" }}.descention.net`)"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls.certResolver=letsencrypt"
      - "--certificatesresolvers.letsencrypt.acme.email=scott.mundorff@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/srv/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--log.level=info"
      - "--entrypoints.websecure.forwardedHeaders.trustedIPs=127.0.0.1/32,173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22"
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${BASE_DIR}/traefik/ssl:/srv
    networks:
      - web
  homebridge:
    image: oznu/homebridge:ubuntu
    restart: always
    network_mode: host
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - HOMEBRIDGE_CONFIG_UI=1
      - HOMEBRIDGE_CONFIG_UI_PORT=8581
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${BASE_DIR}/homebridge:/homebridge
  vault:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    environment:
      - DOMAIN=https://vault.descention.net
      - SIGNUPS_ALLOWED=false
      - SIGNUPS_VERIFY=true
      - SMTP_HOST=${VAULT_SMTP_HOST}
      - SMTP_PORT=465
      - SMTP_SSL=false
      - SMTP_EXPLICIT_TLS=true
      - SMTP_FROM=${VAULT_SMTP_FROM}
      - SMTP_USERNAME=${VAULT_SMTP_USERNAME}
      - SMTP_PASSWORD=${VAULT_SMTP_PASSWORD}
      - SMTP_AUTH_MECHANISM=${VAULT_SMTP_AUTH_MECHANISM}
      #- ADMIN_TOKEN=${VAULT_ADMIN_TOKEN}
    volumes:
      - ${BASE_DIR}/vaultwarden-server:/data
    networks:
      - web
    labels:
      - "traefik.enable=true"

  photos:
    ## Use photoprism/photoprism:preview for testing preview builds:
    image: photoprism/photoprism:latest
    depends_on:
      - mariadb
    ## Don't enable automatic restarts until PhotoPrism has been properly configured and tested!
    ## If the service gets stuck in a restart loop, this points to a memory, filesystem, network, or database issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    restart: unless-stopped
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    ports:
      - "23042:2342" # HTTP port (host:container)
    environment:
      PHOTOPRISM_AUTH_MODE: "password"               # authentication mode (public, password)
      PHOTOPRISM_SITE_URL: "https://photos.descention.net/"  # public server URL incl http:// or https:// and /path, :port is optional
      PHOTOPRISM_ORIGINALS_LIMIT: 5000               # file size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_LOG_LEVEL: "info"                   # log level: trace, debug, info, warning, error, fatal, or panic
      PHOTOPRISM_READONLY: "false"                   # do not modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false"               # enables experimental features
      PHOTOPRISM_DISABLE_CHOWN: "false"              # disables updating storage permissions via chmod and chown on startup
      PHOTOPRISM_DISABLE_WEBDAV: "true"             # disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false"           # disables settings UI and API
      PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # disables all features depending on TensorFlow
      PHOTOPRISM_DISABLE_FACES: "false"              # disables face detection and recognition (requires TensorFlow)
      PHOTOPRISM_DISABLE_CLASSIFICATION: "false"     # disables image classification (requires TensorFlow)
      PHOTOPRISM_DISABLE_RAW: "false"                # disables indexing and conversion of RAW files
      PHOTOPRISM_RAW_PRESETS: "false"                # enables applying user presets when converting RAW files (reduces performance)
      PHOTOPRISM_JPEG_QUALITY: 85                    # a higher value increases the quality and file size of JPEG images and thumbnails (25-100)
      PHOTOPRISM_DETECT_NSFW: "false"                # automatically flags photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true"                 # allows uploads that MAY be offensive (no effect without TensorFlow)
      # PHOTOPRISM_DATABASE_DRIVER: "sqlite"         # SQLite is an embedded database that doesn't require a server
      PHOTOPRISM_DATABASE_DRIVER: "mysql"            # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "mariadb:3306"     # MariaDB or MySQL database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: "photoprism"         # MariaDB or MySQL database schema name
      PHOTOPRISM_DATABASE_USER: "photoprism"         # MariaDB or MySQL database user name
      PHOTOPRISM_DATABASE_PASSWORD: "${MARIA_DB_PASS}"       # MariaDB or MySQL database user password
      PHOTOPRISM_SITE_CAPTION: "AI-Powered Photos App"
      PHOTOPRISM_SITE_DESCRIPTION: ""                # meta site description
      PHOTOPRISM_SITE_AUTHOR: ""                     # meta site author
      ## Run/install on first startup (options: update gpu tensorflow davfs clitools clean):
      # PHOTOPRISM_INIT: "gpu tensorflow"
      ## Hardware Video Transcoding (for sponsors only due to high maintenance and support costs):
      # PHOTOPRISM_FFMPEG_ENCODER: "software"        # FFmpeg encoder ("software", "intel", "nvidia", "apple", "raspberry")
      # PHOTOPRISM_FFMPEG_BITRATE: "32"              # FFmpeg encoding bitrate limit in Mbit/s (default: 50)
      ## Run as a non-root user after initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
      PHOTOPRISM_UID: ${PUID}
      PHOTOPRISM_GID: ${PGID}
      # PHOTOPRISM_UMASK: 0000
    ## Start as non-root user before initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
    user: "${PUID}:${PGID}"
    ## Share hardware devices with FFmpeg and TensorFlow (optional):
    # devices:
    #  - "/dev/dri:/dev/dri"                         # Intel QSV
    #  - "/dev/nvidia0:/dev/nvidia0"                 # Nvidia CUDA
    #  - "/dev/nvidiactl:/dev/nvidiactl"
    #  - "/dev/nvidia-modeset:/dev/nvidia-modeset"
    #  - "/dev/nvidia-nvswitchctl:/dev/nvidia-nvswitchctl"
    #  - "/dev/nvidia-uvm:/dev/nvidia-uvm"
    #  - "/dev/nvidia-uvm-tools:/dev/nvidia-uvm-tools"
    #  - "/dev/video11:/dev/video11"                 # Video4Linux Video Encode Device (h264_v4l2m2m)
    working_dir: "/photoprism" # do not change or remove
    ## Storage Folders: "~" is a shortcut for your home directory, "." for the current directory
    volumes:
      # "/host/folder:/photoprism/folder"                # Example
      - "${HOME_DIR}/Drive/Moments:/photoprism/originals"               # Original media files (DO NOT REMOVE)
      # - "/example/family:/photoprism/originals/family" # *Additional* media folders can be mounted like this
      - "${BASE_DIR}/photoprism/import:/photoprism/import"                  # *Optional* base folder from which files can be imported to originals
      - "${BASE_DIR}/photoprism/storage:/photoprism/storage"     # *Writable* storage folder for cache, database, and sidecar files (DO NOT REMOVE)
    networks:
      - web
      - internal
    labels:
      - "traefik.enable=true"

  ## Database Server (recommended)
  ## see https://docs.photoprism.app/getting-started/faq/#should-i-use-sqlite-mariadb-or-mysql
  mariadb:
    ## If MariaDB gets stuck in a restart loop, this points to a memory or filesystem issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    restart: unless-stopped
    image: mariadb:10.8
    security_opt: # see https://github.com/MariaDB/mariadb-docker/issues/434#issuecomment-1136151239
      - seccomp:unconfined
      - apparmor:unconfined
    command: mysqld --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    ## Never store database files on an unreliable device such as a USB flash drive, an SD card, or a shared network folder:
    volumes:
      - "${BASE_DIR}/photoprism/database:/var/lib/mysql" # DO NOT REMOVE
    environment:
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_INITDB_SKIP_TZINFO: "1"
      MARIADB_DATABASE: "photoprism"
      MARIADB_USER: "photoprism"
      MARIADB_PASSWORD: "${MARIA_DB_PASS}"
      MARIADB_ROOT_PASSWORD: "${MARIA_DB_PASS}"
    networks:
      - internal
  monica:
    image: monica
    depends_on:
      - monicadb
    ports:
      - 80
    environment:
      APP_KEY: "${MONICA_APP_KEY}"
      DB_HOST: "monicadb:3306"
      DB_USERNAME: "usermonica"
      DB_PASSWORD: "${MONICA_MYSQL_PASSWORD}"
    volumes:
      - ${BASE_DIR}/monica/data:/var/www/html/storage
    restart: unless-stopped
    networks:
      - web
      - internal
    labels:
      - "traefik.enable=true"
  monicadb:
    image: mariadb:10.8
    environment:
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_ROOT_PASSWORD: "${MARIA_DB_PASS}"
      MARIADB_DATABASE: "monica"
      MARIADB_USER: "usermonica"
      MARIADB_PASSWORD: "${MONICA_MYSQL_PASSWORD}"
    volumes:
      - ${BASE_DIR}/monica/db:/var/lib/mysql
    restart: unless-stopped
    networks:
      - internal
      
  # ipfs:
  #   image: ipfs/go-ipfs:latest
  #   container_name: ipfs
  #   command: daemon
  #   restart: unless-stopped
  #   volumes:
  #     - ${BASE_DIR}/ipfs/data:/data/ipfs
  #     - ${BASE_DIR}/ipfs/staging:/export
  #   ports:
  #     - 4001:4001/tcp
  #     - 4001:4001/udp
  #     - 5001:5001
  #     - 8999:8080
  #   networks:
  #     - web
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.services.ipfs.loadbalancer.server.port=8999" # set port assignment
  
  # yacy:
  #   image: yacy/yacy_search_server:latest
  #   container_name: yacy
  #   ports:
  #     - 8090:8090
  #   volumes:
  #     - ${BASE_DIR}/yacy:/opt/yacy_search_server/DATA
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.services.yacy.loadbalancer.server.port=8090" # set port assignment
  #   logging:
  #     options:
  #       max-size: "200m"
  #       max-file: "2"

#  matrix:
#    image: vectorim/element-web:latest
#    container_name: element-web
#    labels:
#      - "traefik.enable=true"
#  cookbook:
#    image: hkotel/mealie:latest
#    restart: always
#    container_name: mealie
#    environment:
#      PUID: 1026
#      PGID: 100
#      TZ: America/New_York
#      # Default Recipe Settings
#      RECIPE_PUBLIC: 'true'
#      RECIPE_SHOW_NUTRITION: 'true'
#      RECIPE_SHOW_ASSETS: 'true'
#      RECIPE_LANDSCAPE_VIEW: 'true'
#      RECIPE_DISABLE_COMMENTS: 'true'
#      RECIPE_DISABLE_AMOUNT: 'false'
#      # Gunicorn
#      WEB_CONCURRENCY: 2
#      # WORKERS_PER_CORE: 0.5
#      MAX_WORKERS: 4
# volumes:
#   - ${BASE_DIR}/mealie:/app/data
#   - /etc/localtime:/etc/localtime:ro
# labels:
#   - "traefik.enable=true"

  # watchtower to keep containers updated
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_ROLLING_RESTART=true
      - WATCHTOWER_POLL_INTERVAL=7200 # checks for updates every two hours
networks:
  web: {}
  internal: {}
